/*doc
---
title: Grid System
name: gridsystem
category: Materialize
---

See [Materialize CSS Grid][http://materializecss.com/grid.html]

*/

/*doc
---
title: Gutters
name: gutters
parent: gridsystem
category: Materialize
---

Custom gutter sizes

```html_example
<div class="row sgutter-l">
  <div class="col s12">some code</div>
</div>
```

Classes            | Description
------------------ | ------------
`gutter-0`  | no gutter (at all screen sizes)
`gutter-s`  | small gutter (at all screen sizes)
`gutter-m`  | medium gutter (at all screen sizes)
`gutter-l`  | large gutter (at all screen sizes)
`gutter-xl`  | extra large gutter (at all screen sizes)
`mgutter-0`  | no gutter (at min-width: 601px screen sizes)
`mgutter-s`  | small gutter (at min-width: 601px screen sizes)
`mgutter-m`  | medium gutter (at min-width: 601px screen sizes)
`mgutter-l`  | large gutter (at min-width: 601px screen sizes)
`mgutter-xl`  | extra large gutter (at min-width: 601px screen sizes)
`lgutter-0`  | no gutter  (at min-width: 993px screen sizes)
`lgutter-s`  | small gutter  (at min-width: 993px screen sizes)
`lgutter-m`  | medium gutter  (at min-width: 993px screen sizes)
`lgutter-l`  | large gutter  (at min-width: 993px screen sizes)
`lgutter-xl`  | extra large gutter  (at min-width: 993px screen sizes)
`xlgutter-0`  | no gutter  (at min-width: 1601px sreen sizes)
`xlgutter-s`  | small gutter  (at min-width: 1601px sreen sizes)
`xlgutter-m`  | medium gutter  (at min-width: 1601px sreen sizes)
`xlgutter-l`  | large gutter  (at min-width: 1601px sreen sizes)
`xlgutter-xl`  | extra large gutter  (at min-width: 1601px sreen sizes)
*/

.container {
  margin: 0 auto;
  max-width: 1502px;
  width: 90%;
}
@media #{$medium-and-up} {
  .container {
    width: 85%;
  }
}
@media #{$large-and-up} {
  .container {
    width: 80%;
  }
}
@media #{$xlarge-and-up} {
  .container {
    width: 75%;
  }
}

.container .row {
  margin-left: (-1 * $gutter-width / 2);
  margin-right: (-1 * $gutter-width / 2);
}
.container .row.gutter-0 {
  margin-left: (0);
  margin-right: (0);
}
.container .row.gutter-s {
  margin-left: (-1 * $gutter-width / 10);
  margin-right: (-1 * $gutter-width / 10);
}
.container .row.gutter-m {
  margin-left: (-1 * $gutter-width / 2);
  margin-right: (-1 * $gutter-width / 2);
}
.container .row.gutter-l {
  margin-left: (-1 * $gutter-width);
  margin-right: (-1 * $gutter-width);
}
.container .row.gutter-xl {
  margin-left: (-1 * $gutter-width * 2);
  margin-right: (-1 * $gutter-width * 2);
}
@media #{$medium-and-up} {
  .container .row.mgutter-0 {
    margin-left: (0);
    margin-right: (0);
  }
  .container .row.mgutter-s {
    margin-left: (-1 * $gutter-width / 10);
    margin-right: (-1 * $gutter-width / 10);
  }
  .container .row.mgutter-m {
    margin-left: (-1 * $gutter-width / 2);
    margin-right: (-1 * $gutter-width / 2);
  }
  .container .row.mgutter-l {
    margin-left: (-1 * $gutter-width);
    margin-right: (-1 * $gutter-width);
  }
  .container .row.mgutter-xl {
    margin-left: (-1 * $gutter-width * 2);
    margin-right: (-1 * $gutter-width * 2);
  }
}
@media #{$large-and-up} {
  .container .row.lgutter-0 {
    margin-left: (0);
    margin-right: (0);
  }
  .container .row.lgutter-s {
    margin-left: (-1 * $gutter-width / 10);
    margin-right: (-1 * $gutter-width / 10);
  }
  .container .row.lgutter-m {
    margin-left: (-1 * $gutter-width / 2);
    margin-right: (-1 * $gutter-width / 2);
  }
  .container .row.lgutter-l {
    margin-left: (-1 * $gutter-width);
    margin-right: (-1 * $gutter-width);
  }
  .container .row.lgutter-xl {
    margin-left: (-1 * $gutter-width * 2);
    margin-right: (-1 * $gutter-width * 2);
  }
}
@media #{$xlarge-and-up} {
  .container .row.xlgutter-0 {
    margin-left: (0);
    margin-right: (0);
  }
  .container .row.xlgutter-s {
    margin-left: (-1 * $gutter-width / 10);
    margin-right: (-1 * $gutter-width / 10);
  }
  .container .row.xlgutter-m {
    margin-left: (-1 * $gutter-width / 2);
    margin-right: (-1 * $gutter-width / 2);
  }
  .container .row.xlgutter-l {
    margin-left: (-1 * $gutter-width);
    margin-right: (-1 * $gutter-width);
  }
  .container .row.xlgutter-xl {
    margin-left: (-1 * $gutter-width * 2);
    margin-right: (-1 * $gutter-width * 2);
  }
}

.section {
	padding-top: 1rem;
	padding-bottom: 1rem;

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}

.row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  .col {
    float: left;
    @include box-sizing(border-box);
    padding: 0 $gutter-width / 2;

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &.s#{$i} {
        width: $perc;
        margin-left: 0;
      }
      $i: $i + 1;
    }
    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &.offset-s#{$i} {
        margin-left: $perc;
      }
      $i: $i + 1;
    }

    @media #{$medium-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.m#{$i} {
          width: $perc;
          margin-left: 0;
        }
        $i: $i + 1;
      }
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.offset-m#{$i} {
          margin-left: $perc;
        }
        $i: $i + 1;
      }

    }

    @media #{$large-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.l#{$i} {
          width: $perc;
          margin-left: 0;
        }
        $i: $i + 1;
      }
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.offset-l#{$i} {
          margin-left: $perc;
        }
        $i: $i + 1;
      }

    }

    @media #{$xlarge-and-up} {

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.xl#{$i} {
          width: $perc;
          margin-left: 0;
        }
        $i: $i + 1;
      }
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &.offset-xl#{$i} {
          margin-left: $perc;
        }
        $i: $i + 1;
      }
    }
  }

  &.gutter-0 {
    .col {
      padding: 0 0;
    }//.col
  }//.gutter-0
  &.gutter-s {
    .col {
      padding: 0 $gutter-width / 10;
    }//.col
  }//.gutter-s
  &.gutter-m {
    .col {
      padding: 0 $gutter-width / 2;
    }//.col
  }//.gutter-s
  &.gutter-l {
    .col {
      padding: 0 $gutter-width;
    }//.col
  }//.gutter-l
  &.gutter-xl {
    .col {
      padding: 0 $gutter-width * 2;
    }//.col
  }//.gutter-l

  @media #{$medium-and-up} {
    &.mgutter-0 {
      .col {
        padding: 0 0;
      }//.col
    }//.mgutter-0
    &.mgutter-s {
      .col {
        padding: 0 $gutter-width / 10;
      }//.col
    }//.mgutter-s
    &.mgutter-m {
      .col {
        padding: 0 $gutter-width / 2;
      }//.col
    }//.mgutter-s
    &.mgutter-l {
      .col {
        padding: 0 $gutter-width;
      }//.col
    }//.mgutter-l
    &.mgutter-xl {
      .col {
        padding: 0 $gutter-width * 2;
      }//.col
    }//.mgutter-l
  }
  @media #{$large-and-up} {
    &.lgutter-0 {
      .col {
        padding: 0 0;
      }//.col
    }//.lgutter-0
    &.lgutter-s {
      .col {
        padding: 0 $gutter-width / 10;
      }//.col
    }//.lgutter-s
    &.lgutter-m {
      .col {
        padding: 0 $gutter-width / 2;
      }//.col
    }//.lgutter-s
    &.lgutter-l {
      .col {
        padding: 0 $gutter-width;
      }//.col
    }//.lgutter-l
    &.lgutter-xl {
      .col {
        padding: 0 $gutter-width * 2;
      }//.col
    }//.lgutter-l
  }
  @media #{$xlarge-and-up} {
    &.xlgutter-0 {
      .col {
        padding: 0 0;
      }//.col
    }//.xlgutter-0
    &.xlgutter-s {
      .col {
        padding: 0 $gutter-width / 10;
      }//.col
    }//.xlgutter-s
    &.xlgutter-m {
      .col {
        padding: 0 $gutter-width / 2;
      }//.col
    }//.xlgutter-s
    &.xlgutter-l {
      .col {
        padding: 0 $gutter-width;
      }//.col
    }//.xlgutter-l
    &.xlgutter-xl {
      .col {
        padding: 0 $gutter-width * 2;
      }//.col
    }//.xlgutter-l
  }
}
